// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using TeamAscend.Agapay.Web.Models;

namespace TeamAscend.Agapay.Web.Shared;

public partial class AgapayTestDBContext : DbContext
{
    public AgapayTestDBContext(DbContextOptions<AgapayTestDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<AppGlobalSetting> AppGlobalSettings { get; set; }

    public virtual DbSet<BlogPost> BlogPosts { get; set; }

    public virtual DbSet<GoBag> GoBags { get; set; }

    public virtual DbSet<GoPlan> GoPlans { get; set; }

    public virtual DbSet<GoPlanMember> GoPlanMembers { get; set; }

    public virtual DbSet<MapLocation> MapLocations { get; set; }

    public virtual DbSet<Phonebook> Phonebooks { get; set; }

    public virtual DbSet<UserAccount> UserAccounts { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<AppGlobalSetting>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__AppGloba__3214EC27B20D8387");

            entity.Property(e => e.CreatedBy).HasMaxLength(255);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.ModifiedBy).HasMaxLength(255);
            entity.Property(e => e.ModifiedDate).HasColumnType("datetime");
            entity.Property(e => e.SettingsName)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.SettingsValue).IsRequired();
        });

        modelBuilder.Entity<BlogPost>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__BlogPost__3214EC27FBE146A0");

            entity.ToTable("BlogPost");

            entity.Property(e => e.BlogStatus)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.BlogType)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.Content).IsRequired();
            entity.Property(e => e.CoverPhoto).IsRequired();
            entity.Property(e => e.CreatedBy).HasMaxLength(255);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.ModifiedBy).HasMaxLength(255);
            entity.Property(e => e.ModifiedDate).HasColumnType("datetime");
            entity.Property(e => e.Title)
                .IsRequired()
                .HasMaxLength(255);
        });

        modelBuilder.Entity<GoBag>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__GoBag__3214EC27507E3A00");

            entity.ToTable("GoBag");

            entity.Property(e => e.Category)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.CreatedBy).HasMaxLength(255);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.Description)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.ModifiedBy).HasMaxLength(255);
            entity.Property(e => e.ModifiedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<GoPlan>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__GoPlan__3214EC270A671360");

            entity.ToTable("GoPlan");

            entity.Property(e => e.CreatedBy).HasMaxLength(255);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.FamilyMemberRole)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.MeetingPointAddresss)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.MeetingPointPIN)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.ModifiedBy).HasMaxLength(255);
            entity.Property(e => e.ModifiedDate).HasColumnType("datetime");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.PhoneNumber)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.ShareCode)
                .IsRequired()
                .HasMaxLength(255);
        });

        modelBuilder.Entity<GoPlanMember>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__GoPlanMe__3214EC275DC5AE06");

            entity.ToTable("GoPlanMember");

            entity.Property(e => e.CreatedBy).HasMaxLength(255);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.FamilyMemberRole).HasMaxLength(100);
            entity.Property(e => e.ModifiedBy).HasMaxLength(255);
            entity.Property(e => e.ModifiedDate).HasColumnType("datetime");
            entity.Property(e => e.PhoneNumber).HasMaxLength(50);
        });

        modelBuilder.Entity<MapLocation>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__MapLocat__3214EC277B42B93C");

            entity.ToTable("MapLocation");

            entity.Property(e => e.Address)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.CreatedBy).HasMaxLength(255);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.District).HasMaxLength(255);
            entity.Property(e => e.LocationType)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.MapCoordinates)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.ModifiedBy).HasMaxLength(255);
            entity.Property(e => e.ModifiedDate).HasColumnType("datetime");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(255);
        });

        modelBuilder.Entity<Phonebook>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__Phoneboo__3214EC279E97A6BA");

            entity.ToTable("Phonebook");

            entity.Property(e => e.Agency).HasMaxLength(255);
            entity.Property(e => e.Barangay)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.BarangayCaptain).HasMaxLength(255);
            entity.Property(e => e.ContactName)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.ContactNumber)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.CreatedBy).HasMaxLength(255);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.District)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.EmergencyHotline).HasMaxLength(255);
            entity.Property(e => e.Location)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.ModifiedBy).HasMaxLength(255);
            entity.Property(e => e.ModifiedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<UserAccount>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__UserAcco__3214EC2792193DFF");

            entity.ToTable("UserAccount");

            entity.Property(e => e.AddressLine1)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.AddressLine2).HasMaxLength(255);
            entity.Property(e => e.Barangay).HasMaxLength(255);
            entity.Property(e => e.BirthDate)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.City)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.ContactNo1)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.ContactNo2).HasMaxLength(255);
            entity.Property(e => e.CreatedBy).HasMaxLength(255);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.EmailAddress)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.FirstName)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.LastName)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.MiddleName)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.ModifiedBy).HasMaxLength(255);
            entity.Property(e => e.ModifiedDate).HasColumnType("datetime");
            entity.Property(e => e.Password)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.Region)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.Role)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.Username)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.ZipPostCode)
                .IsRequired()
                .HasMaxLength(255);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}