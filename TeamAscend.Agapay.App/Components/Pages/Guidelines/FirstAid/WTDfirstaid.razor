@page "/WTDfirstaid"
@inject NavigationManager NavigationManager

<div class="first-aid-container">
    <div class="nav-bar">
        <h1 class="page-title">First Aid Guide</h1>
    </div>

    <!-- Tabs Section -->
    <div class="tabs-container">
        <div class="tab-button @(activeTab == "guide" ? "active" : "")" @onclick='() => SwitchTab("guide")'>
            <i class="fas fa-notes-medical"></i>
            <span>First Aid Guide</span>
        </div>
        <div class="tab-button @(activeTab == "bookmarks" ? "active" : "")" @onclick='() => SwitchTab("bookmarks")'>
            <i class="far fa-bookmark"></i>
            <span>Bookmarks</span>
        </div>
    </div>

    <!-- Content Grid -->
    <div class="cards-grid">
        @foreach (var card in (activeTab == "guide" ? firstAidCards : firstAidCards.Where(c => c.IsBookmarked)))
        {
            <div class="first-aid-card">
                <img src="@card.ImageUrl" alt="@card.Title" @onclick="() => NavigateToDetail(card)"/>
                <div class="card-content">
                    <h3>@card.Title</h3>
                    <i class="@(card.IsBookmarked ? "fas" : "far") fa-bookmark bookmark-icon"
                       @onclick="() => ToggleBookmark(card)"></i>
                </div>
            </div>
        }
        @if (activeTab == "bookmarks" && !firstAidCards.Any(c => c.IsBookmarked))
        {
            <div class="empty-state">
                <i class="far fa-bookmark empty-icon"></i>
                <p>No bookmarked guides yet</p>
            </div>
        }
    </div>
</div>

<style>
    .first-aid-container {
        background: white;
        min-height: 100vh;
        padding: 16px;
    }

    .nav-bar {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-bottom: 20px;
    }

    .back-button {
        font-size: 20px;
        color: #002147;
        cursor: pointer;
    }

    .page-title {
        font-weight: bold;
        margin: 0;
        font-size: 20px;
        color: #002147;
    }

    .placeholder {
        width: 20px;
    }

    .tabs-container {
        display: flex;
        background: #f5f5f5;
        border-radius: 12px;
        padding: 4px;
        margin-bottom: 20px;
    }

    .tab-button {
        flex: 1;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 8px;
        padding: 12px;
        border-radius: 8px;
        cursor: pointer;
        transition: all 0.3s ease;
        color: #666;
    }

    .tab-button.active {
        background: #002147;
        color: white;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .cards-grid {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 16px;
    }

    .first-aid-card {
        background: white;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        cursor: pointer;
        transition: transform 0.2s ease;
    }

    .first-aid-card:hover {
        transform: translateY(-2px);
    }

    .first-aid-card img {
        width: 100%;
        height: 120px;
        object-fit: cover;
        border-top-left-radius: 12px;
        border-top-right-radius: 12px;
    }

    .card-content {
        padding: 12px;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .card-content h3 {
        margin: 0;
        font-size: 16px;
        color: #003366;
        font-weight: bold;
    }

    .bookmark-icon {
        color: #002147;
        cursor: pointer;
        font-size: 18px;
        transition: transform 0.2s ease;
    }

    .bookmark-icon:hover {
        transform: scale(1.1);
    }

    .empty-state {
        grid-column: 1 / -1;
        text-align: center;
        padding: 40px;
        color: #666;
    }

    .empty-icon {
        font-size: 48px;
        margin-bottom: 16px;
    }
</style>

@code {
    private string activeTab = "guide";

    private class FirstAidCard
    {
        public string Title { get; set; }
        public string ImageUrl { get; set; }
        public bool IsBookmarked { get; set; }
    }

    private List<FirstAidCard> firstAidCards = new()
    {
        new FirstAidCard { Title = "Basic CPR", ImageUrl = "imgs/wtd_banners/wtdfa_banners/wtd_cpr.jpeg", IsBookmarked = false },
        new FirstAidCard { Title = "Healing Burns", ImageUrl = "imgs/wtd_banners/wtdfa_banners/wtd_burns.jpeg", IsBookmarked = false },
        new FirstAidCard { Title = "Splinting", ImageUrl = "imgs/wtd_banners/wtdfa_banners/wtd_splinting.jpeg", IsBookmarked = false },
        new FirstAidCard { Title = "Choking", ImageUrl = "imgs/wtd_banners/wtdfa_banners/wtd_choking.jpeg", IsBookmarked = false },
        new FirstAidCard { Title = "Bleeding", ImageUrl = "imgs/wtd_banners/wtdfa_banners/wtd_bleeding.jpeg", IsBookmarked = false },
        new FirstAidCard { Title = "Minor Cuts", ImageUrl = "imgs/wtd_banners/wtdfa_banners/wtd_cuts.jpeg", IsBookmarked = false },
        new FirstAidCard { Title = "Hyperthermia", ImageUrl = "imgs/wtd_banners/wtdfa_banners/wtd_hyperthermia.jpeg", IsBookmarked = false },
        new FirstAidCard { Title = "Heatstroke", ImageUrl = "imgs/wtd_banners/wtdfa_banners/wtd_heatstroke.jpeg", IsBookmarked = false }
    };

    private void SwitchTab(string tab)
    {
        activeTab = tab;
        StateHasChanged();
    }

    private void ToggleBookmark(FirstAidCard card)
    {
        card.IsBookmarked = !card.IsBookmarked;
        StateHasChanged();
    }

    private void NavigateBack()
    {
        // Navigation logic here
    }

    private void NavigateToDetail(FirstAidCard card)
    {
        switch (card.Title)
        {
            case "Basic CPR":
                NavigationManager.NavigateTo("/WTDcpr");
                break;
            case "Healing Burns":
                NavigationManager.NavigateTo("/WTDburns");
                break;
            case "Splinting":
                NavigationManager.NavigateTo("/WTDsplinting");
                break;
            case "Choking":
                NavigationManager.NavigateTo("/WTDchoking");
                break;
            case "Bleeding":
                NavigationManager.NavigateTo("/WTDbleeding");
                break;
            case "Minor Cuts":
                NavigationManager.NavigateTo("/WTDminorcutswounds");
                break;
            case "Hyperthermia":
                NavigationManager.NavigateTo("/WTDhyperthermia");
                break;
            case "Heatstroke":
                NavigationManager.NavigateTo("/WTDstroke");
                break;
            // Add other cases as you create more detail pages
        }
    }
}
