@using TeamAscend.Agapay.App.Components.Layout
@layout BaseLayout
@page "/mapsearch"

<style>
   /* Keep existing styles */
   .shortcut-btn {
    cursor: pointer;
    padding: 8px 16px;
    background: #f0f0f0;
    border-radius: 20px;
    margin: 0 8px;
    white-space: nowrap;
    transition: background-color 0.3s;
}

.shortcut-btn.active {
    background: #007bff;
    color: white;
}

.sheet-description {
    margin: 10px 0;
    font-size: 14px;
    color: #666;
}
</style>

<!-- Map -->
<div id="mapview"></div>

<!-- Top Bar -->
<div class="map-topbar">
    <a href="/" class="back-btn">
        <i class="fas fa-arrow-left"></i>
    </a>

    <!-- Floating Search Bar -->
    <div class="map-search-container">
        <i class="fas fa-search icon"></i>
        <input type="text" @bind="searchText" @bind:event="OnSearchInput" placeholder="Search here" />
    </div>
</div>

<!-- Scrollable Shortcut Buttons -->
<div class="shortcut-scroll">
    <div class="shortcut-btn @(currentFilter == locationTypes[0] ? "active" : "")" @onclick="() => FilterLocations(0)">
        <i class="fas fa-globe"></i> All
    </div>
    <div class="shortcut-btn @(currentFilter == locationTypes[1] ? "active" : "")" @onclick="() => FilterLocations(1)">
        <i class="fas fa-hospital"></i> Hospitals
    </div>
    <div class="shortcut-btn @(currentFilter == locationTypes[2] ? "active" : "")" @onclick="() => FilterLocations(2)">
        <i class="fas fa-house-damage"></i> Evacuation Site
    </div>
    <div class="shortcut-btn @(currentFilter == locationTypes[3] ? "active" : "")" @onclick="() => FilterLocations(3)">
        <i class="fas fa-store"></i> Supply Store
    </div>
    <div class="shortcut-btn @(currentFilter == locationTypes[4] ? "active" : "")" @onclick="() => FilterLocations(4)">
        <i class="fas fa-building"></i> Government Centers
    </div>
    <div class="shortcut-btn @(currentFilter == locationTypes[5] ? "active" : "")" @onclick="() => FilterLocations(5)">
        <i class="fas fa-warehouse"></i> Relief Warehouse
    </div>
     <div class="shortcut-btn @(currentFilter == locationTypes[6] ? "active" : "")" @onclick="() => FilterLocations(6)">
        <i class="fas fa-water"></i> Water Refill Station
    </div>
     <div class="shortcut-btn @(currentFilter == locationTypes[7] ? "active" : "")" @onclick="() => FilterLocations(7)">
        <i class="fas fa-water"></i> Police Station
    </div>
     <div class="shortcut-btn @(currentFilter == locationTypes[8] ? "active" : "")" @onclick="() => FilterLocations(8)">
        <i class="fas fa-water"></i> Fire Station
    </div>
     <div class="shortcut-btn @(currentFilter == locationTypes[9] ? "active" : "")" @onclick="() => FilterLocations(9)">
        <i class="fas fa-water"></i> Shelter
    </div>
    <div class="shortcut-btn @(currentFilter == locationTypes[10] ? "active" : "")" @onclick="() => FilterLocations(10)">
        <i class="fas fa-water"></i> Other
    </div>
</div>

<!-- Bottom Sheet -->
<div class="bottom-sheet" id="bottomSheet">
    <div class="sheet-header" id="dragHandle">
        <div class="sheet-drag-handle"></div>
    </div>
    <div class="sheet-content">
        <div class="sheet-title" id="sheetTitle">Sample Location</div>
        <div class="sheet-address" id="sheetAddress">123 Example St, City Name</div>
        <div class="sheet-description" id="sheetDescription"></div>
        <div class="sheet-actions">
            <button onclick="alert('Directions feature coming soon!')">Get Directions</button>
        </div>
    </div>
</div>


<script>
    let bottomSheet = document.getElementById('bottomSheet');
    let dragHandle = document.getElementById('dragHandle');
    let startY = 0;
    let currentY = 0;
    let isDragging = false;
    let sheetHeight = 25; // starting height (%)
    let maxHeight = 70; // expanded
    let minHeight = 0; // hidden

    // ✅ Show the sheet programmatically
    function showBottomSheet() {
        if (!bottomSheet) bottomSheet = document.getElementById('bottomSheet');
        bottomSheet.style.transition = 'none';
        bottomSheet.style.height = '40%'; // reset default height
        bottomSheet.style.transform = 'translateY(0%)'; // reset any hidden transform
        bottomSheet.classList.add('show');
        bottomSheet.classList.remove('expanded');

        // Force reflow (important to make transition restart cleanly)
        void bottomSheet.offsetWidth;
        bottomSheet.style.transition = 'transform 0.3s ease, height 0.3s ease';
    }

    // ✅ Hide the sheet cleanly
    function hideBottomSheet() {
        if (!bottomSheet) bottomSheet = document.getElementById('bottomSheet');
        bottomSheet.style.transition = 'transform 0.3s ease, height 0.3s ease';
        bottomSheet.style.transform = 'translateY(100%)'; // slide down
        bottomSheet.addEventListener('transitionend', () => {
            bottomSheet.classList.remove('show');
            bottomSheet.style.height = ''; // clear inline height
            bottomSheet.style.transform = ''; // reset transform
        }, { once: true });
    }

    // --- Drag Logic ---
    dragHandle.addEventListener('touchstart', startDrag);
    dragHandle.addEventListener('mousedown', startDrag);

    function startDrag(e) {
        isDragging = true;
        startY = e.touches ? e.touches[0].clientY : e.clientY;
        bottomSheet.style.transition = 'none';
        document.addEventListener('touchmove', onDrag);
        document.addEventListener('mousemove', onDrag);
        document.addEventListener('touchend', endDrag);
        document.addEventListener('mouseup', endDrag);
    }

    function onDrag(e) {
        if (!isDragging) return;
        currentY = e.touches ? e.touches[0].clientY : e.clientY;
        let deltaY = currentY - startY;
        let sheet = bottomSheet.getBoundingClientRect();
        let newHeight = ((window.innerHeight - sheet.top - deltaY) / window.innerHeight) * 100;

        // Clamp height
        newHeight = Math.max(minHeight, Math.min(maxHeight, newHeight));

        bottomSheet.style.height = `${newHeight}%`;
    }

    function endDrag() {
        isDragging = false;
        bottomSheet.style.transition = 'transform 0.3s ease, height 0.3s ease';

        const currentHeight = parseFloat(bottomSheet.style.height);
        if (currentHeight < 15) {
            hideBottomSheet(); // ✅ This now resets everything properly
        } else if (currentHeight > 55) {
            bottomSheet.classList.add('expanded');
        } else {
            bottomSheet.classList.remove('expanded');
            bottomSheet.classList.add('show');
            bottomSheet.style.height = '40%';
        }

        document.removeEventListener('touchmove', onDrag);
        document.removeEventListener('mousemove', onDrag);
        document.removeEventListener('touchend', endDrag);
        document.removeEventListener('mouseup', endDrag);
    }
</script>